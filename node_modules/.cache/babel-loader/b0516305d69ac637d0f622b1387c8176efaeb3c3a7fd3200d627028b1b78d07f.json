{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      task: '',\n      editedTask: null,\n      availableStatus: ['to-do', 'in-progress', 'finished'],\n      tasks: [{\n        name: 'fix motorbike',\n        status: 'to-do'\n      }, {\n        name: 'fix bike',\n        status: 'in-progress'\n      }]\n    };\n  },\n  methods: {\n    submitTask() {\n      if (this.task.length === 0) return;\n      if (this.editedTask === null) {\n        this.tasks.push({\n          name: this.task,\n          status: 'to-do'\n        });\n      } else {\n        this.tasks[this.editedTask].name = this.task;\n        this.editedTask = null;\n      }\n      this.task = '';\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n    },\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n    },\n    changeStatus(index) {\n      let newIndex = this.availableStatus.indexOf(this.tasks[index].status);\n      if (++newIndex > 2) newIndex = 0;\n      this.tasks[index].status = this.availableStatus[newIndex];\n    }\n  }\n};","map":{"version":3,"names":["name","props","msg","String","data","task","editedTask","availableStatus","tasks","status","methods","submitTask","length","push","deleteTask","index","splice","editTask","changeStatus","newIndex","indexOf"],"sources":["/home/nisgia/Desktop/todo-app/todo-app/src/components/TodoApp.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h2 class=\"text-center mt-5\">My Vue Todo App</h2>\n\n        <div class=\"d-flex\">\n            <input v-model=\"task\" type=\"text\" placeholder=\"Enter task\" class=\"form-control\">\n            <button @click=\"submitTask()\" class=\"btn btn-warning rounded-0\">SUBMIT</button>\n        </div>\n\n        <table class=\"table table-bordered mt-5\">\n            <thead>\n                <tr>\n                    <th scope=\"col\">Task</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\" class=\"text-center\">#</th>\n                    <th scope=\"col\" class=\"text-center\">#</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n                    <td>{{task.name}}</td>\n                    <td style=\"width: 120px;\">\n                        <span class=\"pointer\" @click=\"changeStatus(index)\">\n                            {{task.status}}\n                        </span>\n                    </td>\n                    <td>\n                        <div class=\"text-center\" @click=\"editTask(index)\">\n                            <span class=\"fa fa-pen\"></span>\n                        </div>\n                    </td>\n                    <td>\n                        <div class=\"text-center\" @click=\"deleteTask(index)\">\n                            <span class=\"fa fa-trash\"></span>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n</template>\n\n<script>\n    export default {\n        name: 'HelloWorld',\n        props: {\n            msg: String\n        },\n\n        data(){\n            return{\n                task: '',\n                editedTask: null,\n                availableStatus: ['to-do', 'in-progress', 'finished'],\n\n                tasks: [\n                    {\n                        name: 'fix motorbike',\n                        status: 'to-do'\n                    },\n\n                    {\n                        name: 'fix bike',\n                        status: 'in-progress'\n                    }\n                ]\n            }\n        },\n        methods: {\n\n           submitTask(){\n                if(this.task.length === 0) return;\n\n                if(this.editedTask === null){\n                    this.tasks.push({\n                    name: this.task,\n                    status: 'to-do'\n                })}\n                else{\n                    this.tasks[this.editedTask].name = this.task;\n                    this.editedTask = null;\n                }\n\n                \n\n                this.task = '';\n           },\n\n           deleteTask(index){\n                this.tasks.splice(index, 1);\n           }, \n\n           editTask(index){\n            this.task = this.tasks[index].name;\n            this.editedTask = index;\n           },\n\n           changeStatus(index){\n            let newIndex = this.availableStatus.indexOf(this.tasks[index].status);\n            if(++newIndex > 2) newIndex = 0;\n            this.tasks[index].status = this.availableStatus[newIndex];\n           }\n        }\n    }\n</script>\n\n<style scoped>\n.pointer {\n    cursor: pointer;\n}\n</style>"],"mappings":";AA2CI,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACHC,GAAG,EAAEC;EACT,CAAC;EAEDC,IAAIA,CAAA,EAAE;IACF,OAAM;MACFC,IAAI,EAAE,EAAE;MACRC,UAAU,EAAE,IAAI;MAChBC,eAAe,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,CAAC;MAErDC,KAAK,EAAE,CACH;QACIR,IAAI,EAAE,eAAe;QACrBS,MAAM,EAAE;MACZ,CAAC,EAED;QACIT,IAAI,EAAE,UAAU;QAChBS,MAAM,EAAE;MACZ;IAER;EACJ,CAAC;EACDC,OAAO,EAAE;IAENC,UAAUA,CAAA,EAAE;MACP,IAAG,IAAI,CAACN,IAAI,CAACO,MAAK,KAAM,CAAC,EAAE;MAE3B,IAAG,IAAI,CAACN,UAAS,KAAM,IAAI,EAAC;QACxB,IAAI,CAACE,KAAK,CAACK,IAAI,CAAC;UAChBb,IAAI,EAAE,IAAI,CAACK,IAAI;UACfI,MAAM,EAAE;QACZ,CAAC,CAAC;MAAA,OACE;QACA,IAAI,CAACD,KAAK,CAAC,IAAI,CAACF,UAAU,CAAC,CAACN,IAAG,GAAI,IAAI,CAACK,IAAI;QAC5C,IAAI,CAACC,UAAS,GAAI,IAAI;MAC1B;MAIA,IAAI,CAACD,IAAG,GAAI,EAAE;IACnB,CAAC;IAEDS,UAAUA,CAACC,KAAK,EAAC;MACZ,IAAI,CAACP,KAAK,CAACQ,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAChC,CAAC;IAEDE,QAAQA,CAACF,KAAK,EAAC;MACd,IAAI,CAACV,IAAG,GAAI,IAAI,CAACG,KAAK,CAACO,KAAK,CAAC,CAACf,IAAI;MAClC,IAAI,CAACM,UAAS,GAAIS,KAAK;IACxB,CAAC;IAEDG,YAAYA,CAACH,KAAK,EAAC;MAClB,IAAII,QAAO,GAAI,IAAI,CAACZ,eAAe,CAACa,OAAO,CAAC,IAAI,CAACZ,KAAK,CAACO,KAAK,CAAC,CAACN,MAAM,CAAC;MACrE,IAAG,EAAEU,QAAO,GAAI,CAAC,EAAEA,QAAO,GAAI,CAAC;MAC/B,IAAI,CAACX,KAAK,CAACO,KAAK,CAAC,CAACN,MAAK,GAAI,IAAI,CAACF,eAAe,CAACY,QAAQ,CAAC;IAC1D;EACH;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}